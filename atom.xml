<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>KinWah&#39;s Blog</title>
  <subtitle>「 记录指尖，敲击之美 」</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://KinWah.top/"/>
  <updated>2017-09-01T15:40:43.000Z</updated>
  <id>http://KinWah.top/</id>
  
  <author>
    <name>KinWah</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>动手吧，用Hexo+Github搭建个人博客</title>
    <link href="http://KinWah.top//blog/%E7%94%A8hexo+github%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2.html"/>
    <id>http://KinWah.top//blog/用hexo+github搭建个人博客.html</id>
    <published>2017-08-25T16:50:43.000Z</published>
    <updated>2017-09-01T15:40:43.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote>
<p>前言：学习前端也有好些日子了，看到知乎或者掘金等平台上的前端大神们都有自己的私人博客，想起以前经常混迹的网易博客，突然萌发了搭建一个私人博客的想法。当然，写博客不是为了写而写，更多的是记录自己的学习和思维轨迹，同时也算是一个回顾和反思的地方。不是为了更多人能看到，而是为了让自己的思想灵魂有个安放的居所，于是就有了这篇伪教程。</p>
</blockquote>
<p>趁着有空，参照了网上很多篇的教程，把自己用Hexo+Github搭建博客的过程记录了一番：</p>
<p>我的博客地址：<a href="http://kinwah.top">http://kinwah.top</a><br><a id="more"></a></p>
<hr>
<h1 id="流程概括"><a href="#流程概括" class="headerlink" title="流程概括"></a><font color="#3f51b5">流程概括</font></h1><ol>
<li>本地搭建 Node.js 环境</li>
<li>本地搭建 Git 环境</li>
<li>注册并配置 Github帐号</li>
<li>安装并配置 Hexo</li>
<li>关联 Hexo 和 Github Pages</li>
<li>关联解析到个人域名</li>
<li>Hexo 常用操作</li>
<li>Hexo 主题美化和性能优化</li>
<li>学习并适应如何用 Markdown 写文章</li>
<li>还看什么别人的博客？赶紧动手去搭建自己的博客去！</li>
</ol>
<blockquote>
<p>本教程适用于MacOS，如果是Win系统下，相似的操作和命令行是可以参考借鉴的，macOS下的终端，Win下就是命令行cmd。</p>
</blockquote>
<hr>
<h2 id="本地搭建-Node-js-环境"><a href="#本地搭建-Node-js-环境" class="headerlink" title="本地搭建 Node.js 环境"></a><font color="#3f51b5">本地搭建 Node.js 环境</font></h2><blockquote>
<p>由于Hexo博客系统是基于Node.js编写的，所以搭建Node.js环境是必不可少的环节。</p>
</blockquote>
<p>先去Node.js官网（中文网）：<a href="http://nodejs.cn/" target="_blank" rel="external">http://nodejs.cn/</a> 下载最新的安装包（注意自己的系统类型）</p>
<p>安装过程一般都会的，就是一路next就好，macOS和win都是。</p>
<p>接下来打开终端，输入<code>node -v</code>、<code>npm -v</code> 如果能正确显示版本号，说明Node.js环境配置完成，这是关键的第一步。</p>
<p><img src="http://ovl5r0omj.bkt.clouddn.com//17-9-1/16711443.jpg" alt=""></p>
<hr>
<h2 id="本地搭建-Git-环境"><a href="#本地搭建-Git-环境" class="headerlink" title="本地搭建 Git 环境"></a><font color="#3f51b5">本地搭建 Git 环境</font></h2><blockquote>
<p>由于我们需要把本地写好的博客文章，提交到Github上，所以搭建Git环境也是必不可少的一环。</p>
</blockquote>
<p><strong>安装Git有两种办法</strong></p>
<ol>
<li>去 Git 官网：<a href="https://git-scm.com/" target="_blank" rel="external">https://git-scm.com/</a> 下载最新的安装包，直接安装（注意自己的系统类型）</li>
<li>在终端，用 homebrew 指令下载，前提是先安装 homebrew。</li>
</ol>
<ul>
<li>安装homebrew：在终端里，直接复制下面这段代码，并运行: </li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">/usr/bin/ruby -e &quot;$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)&quot;</div></pre></td></tr></table></figure>
<ul>
<li>输入<code>brew -v</code>查看homebrew是否安装成功。</li>
</ul>
<p><img src="http://ovl5r0omj.bkt.clouddn.com//17-9-1/69891057.jpg" alt=""></p>
<ul>
<li>输入<code>brew install git</code>来安装Git。安装过程就省略了，懂英文的一步一步看着来。</li>
<li>输入<code>git --version</code>查看Git是否安装成功。</li>
</ul>
<p><img src="http://ovl5r0omj.bkt.clouddn.com//17-9-1/82164945.jpg" alt=""></p>
<p>到此，Git环境也算基本搭建完毕，第二步顺利完成。</p>
<hr>
<h2 id="注册并配置-Github-帐号"><a href="#注册并配置-Github-帐号" class="headerlink" title="注册并配置 Github 帐号"></a><font color="#3f51b5">注册并配置 Github 帐号</font></h2><blockquote>
<p>GitHub 是一个代码托管平台，因为只支持 Git 作为唯一的版本库格式进行托管，故名 GitHub。</p>
</blockquote>
<ul>
<li>对于拥有个人的github帐号，似乎已经成了现在程序员的标配了（瞎说瞎说，别打我），所以关于注册github帐号就不多作解释了。</li>
</ul>
<p><strong>Github注册：<a href="https://github.com/" target="_blank" rel="external">https://github.com/</a></strong></p>
<p>创建博客相关文件仓库：Create a new repository。这个仓库的命名是有规则的：xxx.github.io</p>
<p>其中，Repository name用你的用账户名称：<font color="#ff4081">Owner.github.io</font> ，如下图所示</p>
<p><img src="http://ovl5r0omj.bkt.clouddn.com//17-9-1/98352003.jpg" alt=""></p>
<p>然后访问：Owner.github.io，如果正常访问，没有提示404错误，说明你的Github已经配置完成，</p>
<p>Hexo的前期准备工作，所有需要的环境配置都已经完毕，就可以进行博客配置和设置了。</p>
<hr>
<h2 id="安装并配置-Hexo"><a href="#安装并配置-Hexo" class="headerlink" title="安装并配置 Hexo"></a><font color="#3f51b5">安装并配置 Hexo</font></h2><blockquote>
<p>Hexo 是一个快速、简洁且高效的博客框架，使用 Markdown（或其他渲染引擎）解析文章，在几秒内，即可利用靓丽的主题生成静态网页。</p>
</blockquote>
<p>在安装Hexo之前，先花点时间看看Hexo的官方中文文档：<a href="https://hexo.io/zh-cn/" target="_blank" rel="external">https://hexo.io/zh-cn/</a></p>
<p>全中文，简单易懂，网页简洁，赏心悦目，无论管你看或不看，它就在那里。（滑稽）</p>
<p><strong>安装Hexo:</strong></p>
<p>官网首页就有这么一段代码：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">npm install hexo-cli -g \\安装hexo</div></pre></td></tr></table></figure>
<p>在终端里，把代码复制进去就完成了安装。期间可能会出现多个<font color="#ff4081">WARN</font>，别担心这不会影响使用，估计是服务器抽风而已。</p>
<p>然后像node和git一样，输入<code>hexo -v</code> 查看hexo版本，来确认安装是否完成。</p>
<p><img src="http://ovl5r0omj.bkt.clouddn.com//17-9-1/3432682.jpg" alt=""></p>
<p><strong>接下来最重要的，就是建站了。</strong></p>
<blockquote>
<p>这里有个比较重要的点需要提醒，很多人安装了hexo之后，找不到自己的blog文件夹再哪，这里先提前教大家一个我个人觉得更加方便的办法。</p>
</blockquote>
<ul>
<li>先找到自己想要建立博客文件夹的目录位置。（比如我想建在文稿里面，这个随意）</li>
<li>接着右键文件夹 &gt; 服务 &gt; 新建位于文件夹的终端窗口</li>
</ul>
<p><img src="http://ovl5r0omj.bkt.clouddn.com//17-9-1/10184465.jpg" alt=""></p>
<ul>
<li>然后终端里面打开，在这个基础下，在进行Hexo的安装和配置。（其实可以用<code>cd</code>的办法，但是路径太烦，还不如这个直接）</li>
</ul>
<p><img src="http://ovl5r0omj.bkt.clouddn.com//17-9-1/68481988.jpg" alt=""></p>
<hr>
<p>完成上面步骤，安装 Hexo 完成后，执行下列命令，Hexo 将会在指定文件夹中新建所需要的文件：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">hexo init myBlog    #建站文件夹</div><div class="line">cd myBlog           #转到myBlog路径</div><div class="line">npm install         #安装</div></pre></td></tr></table></figure>
<p>新建完毕后，所在文件夹目录如下（有些文件可能需要新建博文之后才会生成）：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">├── _config.yml     #全局配置文件</div><div class="line">├── db.json			#全局配置文件</div><div class="line">├── public          #生成的静态网页文件</div><div class="line">├── scaffolds       #模板</div><div class="line">├── themes          #主题</div><div class="line">├── source          #博客正文和其他源文件，404、favicon、CNAME 都应该放在这里</div><div class="line">| ├── _drafts       #草稿</div><div class="line">| └── _posts        #文章</div><div class="line">└── package.json    #npm 依赖等</div></pre></td></tr></table></figure>
<p><strong>运行Hexo本地服务</strong></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">hexo s 				#简写</div><div class="line">hexo server			#全称</div></pre></td></tr></table></figure>
<p>hexo本地服务会建立一个 <font color="#ff4081"><a href="http://localhost:4000" target="_blank" rel="external">http://localhost:4000</a></font> 的网页。如果能够正常访问，则说明 Hexo 本地博客已经搭建完毕，但是这个只有本机电脑或者同一局域网内，同IP段的用户可以查看（手机，IPAD之类的），外网是看不到的。</p>
<p><img src="http://ovl5r0omj.bkt.clouddn.com//17-9-1/68815440.jpg" alt=""></p>
<p><strong>错误小Tips：</strong>执行<code>hexo s</code>的时候，可能会提示找不到命令</p>
<p>解决办法：安装server，命令如下：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">sudo npm install hexo -server #sudo是获取权限</div><div class="line">npm install hexo -server --save #在终端根目录执行sudo -s可以获取全局权限，然后下面可以省略sudo前缀。</div></pre></td></tr></table></figure>
<p>完成上面所有步骤，hexo博客已经算基本安装配置完成了，是时候放到互联网上遛一遛了。</p>
<hr>
<h2 id="关联-Hexo-和-Github-Pages"><a href="#关联-Hexo-和-Github-Pages" class="headerlink" title="关联 Hexo 和 Github Pages"></a><font color="#3f51b5">关联 Hexo 和 Github Pages</font></h2><blockquote>
<p>这一步，就是将你的博客发布到网上，并且可以让大家都可以进行访问的重要步骤。</p>
</blockquote>
<p><strong>生成SSH key</strong></p>
<p>先来生成添加秘钥SSH，终端里输入一下代码：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ssh-keygen -t rsa -C &quot;Github的注册邮箱地址&quot;  #一路Enter配置就行了。</div></pre></td></tr></table></figure>
<p><img src="http://ovl5r0omj.bkt.clouddn.com//17-9-1/66627955.jpg" alt=""></p>
<p>进入这个地址，.ssh文件夹是隐藏的（shift+command+. 可以显示隐藏文件），用文本编辑器打开<code>id_rsa.pub</code>文件，然后把里面的内容全部复制下来（全部Ctrl+A），</p>
<p>然后进入：<a href="https://github.com/settings/ssh" target="_blank" rel="external">https://github.com/settings/ssh</a>：</p>
<p><img src="http://ovl5r0omj.bkt.clouddn.com//17-9-1/83960977.jpg" alt=""></p>
<p>把内容粘贴到<code>Key</code>下面，<code>Title</code>随意填写就好。</p>
<p><strong>配置Git个人信息</strong></p>
<p>安装好git后，配置用户名和用户邮箱，以后每次与Git的交互都会使用该信息。打开终端，输入以下代码：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">git config --global user.name &quot;KinWah&quot; #改成你的Github用户名</div><div class="line">git config --global user.email &quot;591264998@qq.com&quot; #改成你的Github邮箱</div></pre></td></tr></table></figure>
<p>配置信息可以随时更改，以后想要更改使用上面指令，修改姓名和邮箱就可以。</p>
<p>同时可以使用<code>git config --list</code>指令查看Git的配置信息。</p>
<p><strong>配置Deployment</strong></p>
<p>在博客文件夹内，打开<code>_config.yml</code>文件，拉到文件最下面，找到<code># Deployment</code>，修改信息如下：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"># Deployment</div><div class="line">## Docs: https://hexo.io/docs/deployment.html</div><div class="line">deploy:</div><div class="line"></div><div class="line">     type: git</div><div class="line"></div><div class="line">     repo: https://github.com/KinWah/KinWah.github.io.git #主要修改这个地址为你自己的地址</div><div class="line"></div><div class="line">     branch: master</div></pre></td></tr></table></figure>
<p><strong>把本地博客上传提交到Github上</strong></p>
<p>这里就涉及到Hexo常见的几个操作了：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">hexo clean 	#删除旧的 public 文件</div><div class="line">hexo g 		#新建新的 public 文件</div><div class="line">hexo d 		#开始部署</div><div class="line">可以集合起来：</div><div class="line">hexo clean</div><div class="line">hexo d -g</div></pre></td></tr></table></figure>
<p>当你部署完毕之后，在浏览器里面输入你的Github地址：<a href="http://KinWah.github.io" target="_blank" rel="external">http://KinWah.github.io</a>（用户名改成你的），你能看到你网站显示出来的时候，Hexo + Github Pages就已经基本配置完成了。</p>
<p><strong>错误小Tips</strong>：如果部署失败了，需要安装一下扩展：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">npm install hexo-deployer-git --save</div></pre></td></tr></table></figure>
<p>完成上面的步骤，整个博客基本就可以投入使用了，接下来的进阶，就是美化优化和熟悉操作。</p>
<hr>
<h2 id="关联解析到个人域名"><a href="#关联解析到个人域名" class="headerlink" title="关联解析到个人域名"></a><font color="#3f51b5">关联解析到个人域名</font></h2><blockquote>
<p>估计大家也有想过，总是用<a href="http://xxx.github.io去查看博客确实有点让人不好记，那能不能改成自己的私人域名呢？" target="_blank" rel="external">http://xxx.github.io去查看博客确实有点让人不好记，那能不能改成自己的私人域名呢？</a></p>
</blockquote>
<p>为了让自己的博客看起来更加专业，更加个性化一点，绑定自己的个人域名就成为了很多人的优先选择了。</p>
<p>域名有便宜有贵，主要就是看域名是否冷门，现在主要还是万网，阿里云，腾讯云这些，我自己就是阿里云买的域名<code>kinwah.top</code>、<code>kinwah.wang</code>，一年几块钱，还算实惠，建站初期，优先考虑，后期有能力的时候，自己可以买服务器重新配置。</p>
<p>关于域名绑定，其实这个过程就是一个重定向的过程。</p>
<p><strong>域名解析</strong></p>
<p>以我自己的买的阿里云域名后台为例子：</p>
<p>登录后，进入控制台，按照下图所示进入域名解析列表。<br><img src="http://ovl5r0omj.bkt.clouddn.com//17-9-1/47439730.jpg" alt=""></p>
<p>选择你要绑定的域名，并点击解析：<br><img src="http://ovl5r0omj.bkt.clouddn.com//17-9-1/39710419.jpg" alt=""></p>
<p>主要需要修改的信息，就是下面几点：</p>
<ol>
<li>记录类型选择 <font color="#ff4081">CNAME</font><ul>
<li>主机记录填 <font color="#ff4081">www</font></li>
<li>解析线路选择默认</li>
<li>记录值填 <font color="#ff4081">yourname.github.io</font></li>
<li><font color="#ff4081">TTL</font> 值为10分钟</li>
</ul>
</li>
<li><p>记录类型选择 <font color="#ff4081">A</font></p>
<ul>
<li>主机记录填 <font color="#ff4081">@</font></li>
<li>解析线路选择默认</li>
<li><p>记录值填你<font color="#ff4081">GitHub</font> 的ip地址：</p>
</li>
<li><p><code>ping kinwah.github.io #通过终端ping 反馈地址的ip</code></p>
</li>
<li><p><font color="#ff4081">TTL</font> 值为10分钟</p>
</li>
</ul>
</li>
</ol>
<p>点击保存，这个时候，解析已经成功，但是还不能访问，因为我们还需要名为<code>CNAME</code>文本文件（没有后缀扩展名的），</p>
<p><code>CNAME</code>文本文件里面只能添加我们的域名，不用加前缀<code>http://</code></p>
<p><code>www.kinwah.top</code>添加好自己的域名，保存（再次注意，没有扩展名文件）</p>
<p>在我们私人博客所在的Github仓库项目根目录里面添加<code>CNAME</code>文本文件，我们的私人域名才能重新定向，正常访问。</p>
<p>由于hexo的一些机制问题，导致每次<code>hexo deploy</code>部署后，<code>CNAME</code>都会消失重建，虽然解决办法很多，为了方便，直接用最推荐的办法。</p>
<p><strong>推荐小Tips：</strong>把需要上传部署的内容，放在根目录的source文件夹里，例如<code>CNAME</code>、<code>images</code>、<code>favicon.ico</code>等，这样在进行<code>hexo d</code>部署之后，这些文件就不再会被删除了。</p>
<p><strong>就这样，博客整体部署，私人域名访问，基本上全部完成了！！！</strong></p>
<hr>
<h2 id="Hexo-常用操作"><a href="#Hexo-常用操作" class="headerlink" title="Hexo 常用操作"></a><font color="#3f51b5">Hexo 常用操作</font></h2><h2 id="Hexo-主题美化和性能优化"><a href="#Hexo-主题美化和性能优化" class="headerlink" title="Hexo 主题美化和性能优化"></a><font color="#3f51b5">Hexo 主题美化和性能优化</font></h2><h2 id="学习并适应如何用-Markdown-写文章"><a href="#学习并适应如何用-Markdown-写文章" class="headerlink" title="学习并适应如何用 Markdown 写文章"></a><font color="#3f51b5">学习并适应如何用 Markdown 写文章</font></h2><h2 id="还看什么别人的博客？赶紧动手去搭建自己的博客去！"><a href="#还看什么别人的博客？赶紧动手去搭建自己的博客去！" class="headerlink" title="还看什么别人的博客？赶紧动手去搭建自己的博客去！"></a><font color="#3f51b5">还看什么别人的博客？赶紧动手去搭建自己的博客去！</font></h2><p><img src="htt://ovl5r0omj.bkt.clouddn.com//17-9-1/58517498.jpg" alt=""></p>
]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;前言：学习前端也有好些日子了，看到知乎或者掘金等平台上的前端大神们都有自己的私人博客，想起以前经常混迹的网易博客，突然萌发了搭建一个私人博客的想法。当然，写博客不是为了写而写，更多的是记录自己的学习和思维轨迹，同时也算是一个回顾和反思的地方。不是为了更多人能看到，而是为了让自己的思想灵魂有个安放的居所，于是就有了这篇伪教程。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;趁着有空，参照了网上很多篇的教程，把自己用Hexo+Github搭建博客的过程记录了一番：&lt;/p&gt;
&lt;p&gt;我的博客地址：&lt;a href=&quot;http://kinwah.top&quot;&gt;http://kinwah.top&lt;/a&gt;&lt;br&gt;
    
    </summary>
    
      <category term="教程" scheme="http://KinWah.top/categories/%E6%95%99%E7%A8%8B/"/>
    
    
      <category term="博客" scheme="http://KinWah.top/tags/%E5%8D%9A%E5%AE%A2/"/>
    
      <category term="Hexo" scheme="http://KinWah.top/tags/Hexo/"/>
    
      <category term="Github" scheme="http://KinWah.top/tags/Github/"/>
    
  </entry>
  
</feed>
